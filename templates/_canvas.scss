/* Based on 'simple grid' by Chris Coiyer
source: http://css-tricks.com/dont-overthink-it-grids/ */
// Flexible Layout Calculator: http://responsv.com/flexible-math/

/* Canvas
*/
@mixin canvas($canvas-width: $canvas-width-default, $canvas-margin: $canvas-margin-default) {
	@include canvas-width($canvas-width-default); //* default = 90%/1140px */
	@include canvas-margin($canvas-margin-default); /* default = center 0 auto */
}

/* Boxes 
*/
[class*='box-'] {
	float: $set-box-float;
} 

%box, .box {
	width: $box-width;
} /* Set 100% width box */

%box-2-3, .box-2-3 {
	width: $box-2-3-width;
} /* Set 2/3rds box width */

%box-1-2, .box-1-2 {
	width:  $box-1-2-width;
}

%box-1-3, .box-1-3 {
	width: $box-1-3-width;
} /* Set 1/3rd box width */

%box-1-4, .box-1-4 {
	width: $box-1-4-width;
}


/* %%%%%%%%% Usage %%%%%%%%% 
 
 	.someClass {
 		...
 		@extend %box-1-3;
 	}

 %%%%%%%%%%%%%%%%%%%%%%%%% */


/* 
	'@include box-custom($width)' to mixin a custom box 
*/

/* Clearing Context 
*/
%wrap:after {
	@include display($display); /* Will take any display value, default = "inline-block" */
	content: "";
	clear: both;
}

%clear {
	clear: both;
}

%clear-none {
	clear: none;
}
/* Gutters 
*/
*, *:after, *:before {
	@include box-sizing;
} /* When we set a width, that element stays that width, despite padding 
or borders being applied */

[class*='box-'] {
	padding-right: $gutters;
}
[class*='box'] {
	margin-bottom: $box-margin-bottom;
}
[class*='box-']:last-of-type {
	padding-right: $kill-gutter;
}/* Apply a fixed padding to the right side of all box except the last one */

[class*='box']:last-of-type {
	margin-bottom: $box-margin-bottom;
} /* Apply a margin to the bottom of the last 'box' */

/* Outside Gutters 
*/
%wrap-pad {
	padding: $gutters;
} /* Add left padding to the box parent(and optionally top and bottom padding) */

%wrap-pad > [class*='box-']:last-of-type {
	padding-right: $last-outside-gutter;
} /* Restore the right padding to the last box */
